@page
@model Contoso.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Students.</h2>

<p>
    <a asp-page="Create" class="btn btn-success">Create New</a>
</p>

<div class="row">
    <div class="col-md-12">
        <form asp-page="./Index" method="get">
            <div class="form-actions no-color">
                <p>
                    Find by Name:
                    <input type="text" name="searchString" placeholder="Find a Student...." value="@Model.CurrentFilter" class="form-horizontal" style="width:300px; background-color:aquamarine; color:black; font-weight:bold;" />
                    <input type="submit" value="Search" class="btn btn-warning" />
                    <a asp-page="./Index" class="btn btn-default">Back to full List.</a>
                </p>
            </div>

        </form>
    </div>
</div>


<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.NameSort" asp-route-currentFilter="@Model.CurrentFilter">

                    @Html.DisplayNameFor(model => model.Student[0].LastName)
                </a>

            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student[0].FirstMidName)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort" asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].EnrollmentDate)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Students)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstMidName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.EnrollmentDate)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.StudentId" class="btn btn-info">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.StudentId" class="btn btn-primary">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.StudentId" class="btn btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.Students.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Students.HasNextPage ? "disabled" : "";
}

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>

<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.Students.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>